#ifdef FRONTENDSTART
__FRONTENDSTART = DIAG_START_FRONTEND,
#undef FRONTENDSTART
#endif

DIAG(err_fe_dependency_file_requires_MT, CLASS_ERROR, diag::MAP_ERROR, "-dependency-file requires at least one -MT or -MQ option", "", true, false, false, false, 0, "", "")
DIAG(err_fe_error_backend, CLASS_ERROR, diag::MAP_FATAL, "error in backend: %0", "", true, false, false, false, 0, "", "")
DIAG(err_fe_error_opening, CLASS_ERROR, diag::MAP_ERROR, "error opening '%0': %1", "", true, false, false, false, 0, "", "")
DIAG(err_fe_error_reading, CLASS_ERROR, diag::MAP_ERROR, "error reading '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_error_reading_stdin, CLASS_ERROR, diag::MAP_ERROR, "error reading stdin", "", true, false, false, false, 0, "", "")
DIAG(err_fe_expected_clang_command, CLASS_ERROR, diag::MAP_ERROR, "expected a clang compiler command", "", true, false, false, false, 0, "", "")
DIAG(err_fe_expected_compiler_job, CLASS_ERROR, diag::MAP_ERROR, "unable to handle compilation, expected exactly one compiler job in '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_incompatible_options, CLASS_ERROR, diag::MAP_FATAL, "'%0' cannot be used with '%1'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_inline_asm, CLASS_ERROR, diag::MAP_ERROR, "%0", "", true, false, false, false, 5, "", "")
DIAG(err_fe_invalid_ast_action, CLASS_ERROR, diag::MAP_FATAL, "invalid action for AST input", "", true, false, false, false, 0, "", "")
DIAG(err_fe_invalid_ast_file, CLASS_ERROR, diag::MAP_FATAL, "invalid AST file: '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_invalid_code_complete_file, CLASS_ERROR, diag::MAP_FATAL, "cannot locate code-completion file %0", "", true, false, false, false, 0, "", "")
DIAG(err_fe_invalid_plugin_name, CLASS_ERROR, diag::MAP_ERROR, "unable to find plugin '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_invoking, CLASS_ERROR, diag::MAP_FATAL, "error invoking%0: %1", "", true, false, false, false, 0, "", "")
DIAG(err_fe_no_fixit_and_codegen, CLASS_ERROR, diag::MAP_ERROR, "FIX-ITs cannot be applied when generating code", "", true, false, false, false, 0, "", "")
DIAG(err_fe_not_a_pch_file, CLASS_ERROR, diag::MAP_ERROR, "input is not a PCH file: '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_pch_error_at_end_block, CLASS_ERROR, diag::MAP_FATAL, "error at end of module block in PCH file: '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_pch_file_modified, CLASS_ERROR, diag::MAP_FATAL, "file '%0' has been modified since the precompiled header was built", "", true, false, false, false, 0, "", "")
DIAG(err_fe_pch_malformed, CLASS_ERROR, diag::MAP_FATAL, "malformed or corrupted PCH file: '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_pch_malformed_block, CLASS_ERROR, diag::MAP_FATAL, "malformed block record in PCH file: '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_pth_file_has_no_source_header, CLASS_ERROR, diag::MAP_ERROR, "PTH file '%0' does not designate an original source header file for -include-pth", "", true, false, false, false, 0, "", "")
DIAG(err_fe_remap_missing_from_file, CLASS_ERROR, diag::MAP_FATAL, "could not remap from missing file '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_remap_missing_to_file, CLASS_ERROR, diag::MAP_FATAL, "could not remap file '%0' to the contents of file '%1'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_stderr_binary, CLASS_ERROR, diag::MAP_FATAL, "unable to change standard error to binary", "", true, false, false, false, 0, "", "")
DIAG(err_fe_stdout_binary, CLASS_ERROR, diag::MAP_FATAL, "unable to change standard output to binary", "", true, false, false, false, 0, "", "")
DIAG(err_fe_unable_to_create_target, CLASS_ERROR, diag::MAP_ERROR, "unable to create target: '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_unable_to_find_fixit_file, CLASS_ERROR, diag::MAP_ERROR, "FIX-IT could not find file '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_unable_to_interface_with_target, CLASS_ERROR, diag::MAP_ERROR, "unable to interface with target machine", "", true, false, false, false, 0, "", "")
DIAG(err_fe_unable_to_load_pch, CLASS_ERROR, diag::MAP_ERROR, "unable to load PCH file", "", true, false, false, false, 0, "", "")
DIAG(err_fe_unable_to_load_plugin, CLASS_ERROR, diag::MAP_ERROR, "unable to load plugin '%0': '%1'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_unable_to_open_logfile, CLASS_ERROR, diag::MAP_ERROR, "unable to open logfile file '%0': '%1'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_unable_to_open_output, CLASS_ERROR, diag::MAP_ERROR, "unable to open output file '%0': '%1'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_unable_to_read_pch_file, CLASS_ERROR, diag::MAP_ERROR, "unable to read PCH file: '%0'", "", true, false, false, false, 0, "", "")
DIAG(err_fe_unable_to_rename_temp, CLASS_ERROR, diag::MAP_ERROR, "unable to rename temporary '%0' to output file '%1': '%2'", "", true, false, false, false, 0, "", "")
DIAG(err_not_a_pch_file, CLASS_ERROR, diag::MAP_FATAL, "'%0' does not appear to be a precompiled header file", "", true, false, false, false, 0, "", "")
DIAG(err_pch_langopt_mismatch, CLASS_ERROR, diag::MAP_ERROR, "%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2", "", true, false, false, false, 0, "", "")
DIAG(err_pch_langopt_value_mismatch, CLASS_ERROR, diag::MAP_ERROR, "%0 differs in PCH file vs. current file", "", true, false, false, false, 0, "", "")
DIAG(err_relocatable_without_isysroot, CLASS_ERROR, diag::MAP_ERROR, "must specify system root with -isysroot when building a relocatable PCH file", "", true, false, false, false, 0, "", "")
DIAG(err_verify_inconsistent_diags, CLASS_ERROR, diag::MAP_ERROR, "'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2", "", true, false, false, false, 0, "", "")
DIAG(err_verify_invalid_content, CLASS_ERROR, diag::MAP_ERROR, "invalid expected %0: %1", "", true, false, false, false, 0, "", "")
DIAG(err_verify_missing_end, CLASS_ERROR, diag::MAP_ERROR, "cannot find end ('}}') of expected %0", "", true, false, false, false, 0, "", "")
DIAG(err_verify_missing_start, CLASS_ERROR, diag::MAP_ERROR, "cannot find start ('{{') of expected %0", "", true, false, false, false, 0, "", "")
DIAG(note_fe_inline_asm_here, CLASS_NOTE, diag::MAP_FATAL, "instantiated into assembly here", "", true, false, false, false, 0, "", "")
DIAG(note_fixit_applied, CLASS_NOTE, diag::MAP_FATAL, "FIX-IT applied suggested code changes", "", true, false, false, false, 0, "", "")
DIAG(note_fixit_failed, CLASS_NOTE, diag::MAP_FATAL, "FIX-IT unable to apply suggested code changes", "", true, false, false, false, 0, "", "")
DIAG(note_fixit_in_macro, CLASS_NOTE, diag::MAP_FATAL, "FIX-IT unable to apply suggested code changes in a macro", "", true, false, false, false, 0, "", "")
DIAG(note_fixit_main_file_unchanged, CLASS_NOTE, diag::MAP_FATAL, "main file unchanged", "", true, false, false, false, 0, "", "")
DIAG(note_fixit_unfixed_error, CLASS_NOTE, diag::MAP_FATAL, "FIX-IT detected an error it cannot fix", "", true, false, false, false, 0, "", "")
DIAG(note_incompatible_analyzer_plugin_api, CLASS_NOTE, diag::MAP_FATAL, "current API version is '%0', but plugin was compiled with version '%1'", "", true, false, false, false, 0, "", "")
DIAG(note_pch_macro_defined_as, CLASS_NOTE, diag::MAP_FATAL, "definition of macro '%0' in the precompiled header", "", true, false, false, false, 0, "", "")
DIAG(note_using_macro_def_from_pch, CLASS_NOTE, diag::MAP_FATAL, "using this macro definition from precompiled header", "", true, false, false, false, 0, "", "")
DIAG(warn_cmdline_conflicting_macro_def, CLASS_ERROR, diag::MAP_ERROR, "definition of the macro '%0' conflicts with the definition used to build the precompiled header", "", true, false, false, false, 0, "", "")
DIAG(warn_cmdline_missing_macro_defs, CLASS_WARNING, diag::MAP_WARNING, "macro definitions used to build the precompiled header are missing", "", true, false, false, false, 0, "", "")
DIAG(warn_fe_cc_log_diagnostics_failure, CLASS_WARNING, diag::MAP_WARNING, "unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)", "", true, false, false, false, 0, "", "")
DIAG(warn_fe_cc_print_header_failure, CLASS_WARNING, diag::MAP_WARNING, "unable to open CC_PRINT_HEADERS file: %0 (using stderr)", "", true, false, false, false, 0, "", "")
DIAG(warn_fe_macro_contains_embedded_newline, CLASS_WARNING, diag::MAP_WARNING, "macro '%0' contains embedded newline, text after the newline is ignored.", "", true, false, false, false, 0, "", "")
DIAG(warn_fixit_no_changes, CLASS_NOTE, diag::MAP_FATAL, "FIX-IT detected errors it could not fix; no output will be generated", "", true, false, false, false, 0, "", "")
DIAG(warn_incompatible_analyzer_plugin_api, CLASS_WARNING, diag::MAP_WARNING, "checker plugin '%0' is not compatible with this version of the analyzer", "analyzer-incompatible-plugin", true, false, false, false, 0, "", "")
DIAG(warn_macro_name_used_in_pch, CLASS_ERROR, diag::MAP_ERROR, "definition of macro %0 conflicts with an identifier used in the precompiled header", "", true, false, false, false, 0, "", "")
DIAG(warn_pch_compiler_options_mismatch, CLASS_ERROR, diag::MAP_ERROR, "compiler options used when building the precompiled header differ from the options used when using the precompiled header", "", true, false, false, false, 0, "", "")
DIAG(warn_pch_different_branch, CLASS_ERROR, diag::MAP_ERROR, "PCH file built from a different branch (%0) than the compiler (%1)", "", true, false, false, false, 0, "", "")
DIAG(warn_pch_target_triple, CLASS_ERROR, diag::MAP_ERROR, "PCH file was compiled for the target '%0' but the current translation unit is being compiled for target '%1'", "", true, false, false, false, 0, "", "")
DIAG(warn_pch_version_too_new, CLASS_ERROR, diag::MAP_ERROR, "PCH file uses a newer PCH format that cannot be read", "", true, false, false, false, 0, "", "")
DIAG(warn_pch_version_too_old, CLASS_ERROR, diag::MAP_ERROR, "PCH file uses an older PCH format that is no longer supported", "", true, false, false, false, 0, "", "")
DIAG(warn_unknown_analyzer_checker, CLASS_WARNING, diag::MAP_WARNING, "no analyzer checkers are associated with '%0'", "", true, false, false, false, 0, "", "")
DIAG(warn_unknown_negative_warning_option, CLASS_WARNING, diag::MAP_IGNORE, "unknown warning option '%0'", "unknown-warning-option", true, false, false, false, 0, "", "")
DIAG(warn_unknown_warning_option, CLASS_WARNING, diag::MAP_WARNING, "unknown warning option '%0'", "unknown-warning-option", true, false, false, false, 0, "", "")
DIAG(warn_unknown_warning_specifier, CLASS_WARNING, diag::MAP_WARNING, "unknown %0 warning specifier: '%1'", "unknown-warning-option", true, false, false, false, 0, "", "")
